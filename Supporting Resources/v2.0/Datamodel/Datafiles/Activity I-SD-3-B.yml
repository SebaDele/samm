# ===========================================================
# OWASP SAMM Activity Description
# ===========================================================
#Link to the stream that this activity belongs to
stream:
  9a5f26d77f204467bdda7ffa09109d73
  
#Link to the practice level that this activity belongs to
level:
  fc5eb251c6ee4f3db04eb01b62d380ba
  
#Unique identifier (GUID) used to refer to this activity. 
#Please generate another identifier for your specific activity.
id:
  fed0d75c064c4a979a5b7b98adfdedbf

#The title of this activity
title:
  Files and repositories are checked periodically for secrets that should be protected.

#Describe the benefit that is achieved by implementing this activity
benefit: 
  Risk of leaking production secrets is mitigated by removing all manual interactions and regular regeneration.

#A one sentence description of the activity
shortDescription:
  Regenerate secrets dynamically during every deployment using well-hardened process wherever possible. 

#A multi-paragraph description of the activity
longDescription: 
  Where secrets are not predefined or dependant on another system, generate them during the deployment process. Follow appropriate best practices such as using a cryptographically secure pseudorandom number generator if you generate this value randomly. Alert any manual access to secrets in the production environment. 

  Implement checks that detect the presence of secrets in code repositories and files, and run them periodically. Configure tools to look for known strings and unknown high entropy strings, for instance. In systems such as code repositories, where there is a history, include the versions in the checks.

  Mark potential secrets you discover as sensitive values, and either remove them or render them non-sensitive. If you cannot remove them from a historic file in a code repository, for example, you may need to refresh the value on the system that consumes the secret. This way, if an attacker discovers the secret, it will not be useful to them.

#The output of this particular activity
results:
  - result1
  - result2

#The different metrics that can be used to measure the success of the activity
metrics:
  - metric1
  - metric2

#A description of the costs required to implement the activity  
costs:
  TBS.
  
#The (standard) roles involved in the implementation of this activity
personnel:
  - Administrator
  - Security Engineer

#Internal notes that might help the author
notes: 
  None

#References to other activities that are prerequesites to implement this one.
relatedActivities: 
  - 

#Type Classification of the Document
type: Activity